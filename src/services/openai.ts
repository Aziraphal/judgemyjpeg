import OpenAI from 'openai'

const openai = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY!
})

export type AnalysisTone = 'professional' | 'roast'
export type AnalysisLanguage = 'fr' | 'en' | 'es' | 'de' | 'it' | 'pt'

export interface PhotoAnalysis {
  score: number
  potentialScore: number
  partialScores: {
    composition: number
    lighting: number
    focus: number
    exposure: number
    creativity: number
    emotion: number
    storytelling: number
  }
  technical: {
    composition: string
    lighting: string
    focus: string
    exposure: string
  }
  artistic: {
    creativity: string
    emotion: string
    storytelling: string
  }
  suggestions: string[]
  improvements: {
    impact: string
    description: string
    difficulty: 'facile' | 'moyen' | 'difficile'
    scoreGain: number
  }[]
  toolRecommendations: {
    lightroom?: string[]
    photoshop?: string[]
    snapseed?: string[]
  }
}

export async function analyzePhoto(
  imageBase64: string, 
  tone: AnalysisTone = 'professional',
  language: AnalysisLanguage = 'fr'
): Promise<PhotoAnalysis> {
  try {
    // Configuration des langues
    const languageConfig = {
      fr: { name: 'fran√ßais', code: 'fr' },
      en: { name: 'English', code: 'en' },
      es: { name: 'espa√±ol', code: 'es' },
      de: { name: 'Deutsch', code: 'de' },
      it: { name: 'italiano', code: 'it' },
      pt: { name: 'portugu√™s', code: 'pt' }
    }

    const currentLang = languageConfig[language]

    const evaluationPrompt = `Tu es un expert photographe professionnel qui √©value les photos avec pr√©cision technique.

‚öôÔ∏è √âVALUATION TECHNIQUE OBJECTIVE ‚öôÔ∏è
1. Analyse chaque crit√®re de mani√®re STRICTEMENT TECHNIQUE et OBJECTIVE
2. Les notes doivent √™tre IDENTIQUES quel que soit le ton demand√©
3. Base tes scores uniquement sur la qualit√© technique r√©elle
4. Sois pr√©cis et √©quitable dans tes √©valuations

CRIT√àRES D'√âVALUATION TECHNIQUE :
- Composition (0-15) : R√®gle des tiers, √©quilibre, cadrage, lignes directrices
- √âclairage (0-15) : Qualit√©, direction, temp√©rature, contraste
- Mise au point (0-15) : Nettet√©, profondeur de champ, zones de focus
- Exposition (0-15) : Histogramme, sur/sous-exposition, dynamique
- Cr√©ativit√© (0-15) : Originalit√©, angle de vue, approche artistique
- √âmotion (0-15) : Impact visuel, atmosph√®re, storytelling
- Narration (0-10) : Message, composition narrative, √©l√©ments visuels`

    const tonePrompt = tone === 'roast' 
      ? `üî• TON ROAST - COMMENTAIRES M√âCHANTS üî•

IMPORTANT : Tes NOTES restent objectives, seuls tes COMMENTAIRES sont m√©chants !

Tu commentes avec un ton SARCASTIQUE et CRUEL mais tu notes avec JUSTESSE :
- Photo √† 85/100 ‚Üí Note 85 + commentaire m√©chant sur cette qualit√©
- Photo √† 40/100 ‚Üí Note 40 + roast impitoyable de cette m√©diocrit√©
- Photo √† 95/100 ‚Üí Note 95 + respect forc√© mais sarcastique

EXEMPLES DE ROASTS SELON LA QUALIT√â (MAIS AVEC LES VRAIES NOTES) :

üì∏ PHOTO NULLE (0-30) ‚Üí NOTE 2/15 + "Cette photo me donne envie de crever les yeux √† mon capteur"
üì∏ PHOTO MOYENNE (30-60) ‚Üí NOTE 8/15 + "F√©licitations, tu as masteris√© l'art de l'inexistence photographique"  
üì∏ PHOTO CORRECTE (60-80) ‚Üí NOTE 12/15 + "Pas mal pour quelqu'un qui d√©couvre qu'un appareil photo a d'autres boutons"
üì∏ PHOTO EXCELLENTE (80-100) ‚Üí NOTE 15/15 + "Bon. OK. Tu sais tenir un appareil sans le faire tomber, √ßa m'√©nerve"

üíÄ FORMULES ROAST PAR SECTION :
- COMPOSITION ‚Üí Note juste + "Tu as cadr√© comme un strabisme cadre la r√©alit√©"
- √âCLAIRAGE ‚Üí Note juste + "Cette lumi√®re ressemble aux toilettes d'une station-service abandonn√©e"
- EXPOSITION ‚Üí Note juste + "Surexpos√© comme ton ego, sous-expos√© comme mon espoir en ton talent"

üî• R√àGLE ABSOLUE : √âVALUE OBJECTIVEMENT, COMMENTE M√âCHAMMENT !

RESPOND ENTIRELY IN ${currentLang.name.toUpperCase()}.`
      : `üíº TON PROFESSIONNEL - COMMENTAIRES BIENVEILLANTS üíº

IMPORTANT : Tes NOTES restent les m√™mes que le mode cassant, seuls tes COMMENTAIRES sont bienveillants !

Tu commentes avec un ton CONSTRUCTIF et ENCOURAGEANT :
- Photo √† 85/100 ‚Üí Note 85 + compliments sur la ma√Ætrise technique
- Photo √† 40/100 ‚Üí Note 40 + conseils bienveillants pour progresser  
- Photo √† 95/100 ‚Üí Note 95 + f√©licitations pour l'excellence

EXEMPLES DE COMMENTAIRES PROFESSIONNELS :

üì∏ PHOTO FAIBLE (0-30) ‚Üí NOTE R√âELLE + "Cette image pr√©sente des d√©fis techniques qu'on peut am√©liorer ensemble"
üì∏ PHOTO MOYENNE (30-60) ‚Üí NOTE R√âELLE + "Bonne base technique avec un potentiel d'am√©lioration int√©ressant"
üì∏ PHOTO CORRECTE (60-80) ‚Üí NOTE R√âELLE + "Belle ma√Ætrise des fondamentaux avec quelques points √† peaufiner"
üì∏ PHOTO EXCELLENTE (80-100) ‚Üí NOTE R√âELLE + "Excellent travail technique et artistique, bravo !"

üíº FORMULES PRO PAR SECTION :
- COMPOSITION ‚Üí Note juste + "La composition montre une bonne compr√©hension des r√®gles..."
- √âCLAIRAGE ‚Üí Note juste + "L'utilisation de la lumi√®re r√©v√®le une sensibilit√© artistique..."
- EXPOSITION ‚Üí Note juste + "Les r√©glages d'exposition t√©moignent d'une approche r√©fl√©chie..."

üéØ R√àGLE ABSOLUE : M√äME √âVALUATION TECHNIQUE, TON ENCOURAGEANT !

RESPOND ENTIRELY IN ${currentLang.name.toUpperCase()}.`

    const prompt = `
    ${evaluationPrompt}
    
    ${tonePrompt}
    
    CRIT√àRES D'√âVALUATION (correspondance directe avec l'interface) :
    
    SECTION TECHNIQUE (/60 points) :
    - Composition : /15 points
    - Lumi√®re : /15 points  
    - Mise au point : /15 points
    - Exposition : /15 points
    
    SECTION ARTISTIQUE (/40 points) :
    - Cr√©ativit√© : /15 points
    - √âmotion : /15 points
    - Narration : /10 points
    
    TOTAL : /100

    üö® R√àGLES CRITIQUES :
    1. √âVALUE d'abord objectivement selon les crit√®res techniques
    2. ATTRIBUE les notes selon la qualit√© r√©elle de la photo
    3. APPLIQUE ensuite le ton demand√© (${tone}) uniquement aux COMMENTAIRES
    4. Les notes doivent √™tre IDENTIQUES en mode pro et roast
    5. Seule l'expression des analyses diff√®re selon le ton
    
    Fournissez une analyse d√©taill√©e en JSON avec cette structure exacte :

    {
      "potentialScore": [score potentiel apr√®s retouches optimales],
      "partialScores": {
        "composition": [note de 0 √† 15],
        "lighting": [note de 0 √† 15],
        "focus": [note de 0 √† 15],
        "exposure": [note de 0 √† 15],
        "creativity": [note de 0 √† 15],
        "emotion": [note de 0 √† 15],
        "storytelling": [note de 0 √† 10]
      },
      "technical": {
        "composition": "[analyse de la composition avec le ton ${tone}]",
        "lighting": "[analyse de la lumi√®re avec le ton ${tone}]",
        "focus": "[analyse mise au point avec le ton ${tone}]",
        "exposure": "[analyse exposition avec le ton ${tone}]"
      },
      "artistic": {
        "creativity": "[analyse cr√©ativit√© avec le ton ${tone}]",
        "emotion": "[analyse √©motion avec le ton ${tone}]",
        "storytelling": "[analyse narration avec le ton ${tone}]"
      },
      "suggestions": [
        "suggestion concr√®te 1",
        "suggestion concr√®te 2",
        "suggestion concr√®te 3"
      ],
      "improvements": [
        {
          "impact": "Corriger l'exposition",
          "description": "√âclaircir les ombres de +2 stops",
          "difficulty": "facile",
          "scoreGain": 8
        }
      ],
      "toolRecommendations": {
        "lightroom": ["ajustement lumi√®re"],
        "photoshop": ["retouche"],
        "snapseed": ["contraste"]
      }
    }
    `

    const response = await openai.chat.completions.create({
      model: "gpt-4o-mini",
      messages: [
        {
          role: "user",
          content: [
            {
              type: "text",
              text: prompt
            },
            {
              type: "image_url",
              image_url: {
                url: `data:image/jpeg;base64,${imageBase64}`
              }
            }
          ]
        }
      ],
      max_tokens: 2000,
      temperature: 0.7
    })

    const content = response.choices[0]?.message?.content
    if (!content) {
      throw new Error('R√©ponse OpenAI vide')
    }
    
    // Extraire le JSON de la r√©ponse
    const jsonMatch = content.match(/\{[\s\S]*\}/)
    if (!jsonMatch) {
      throw new Error('R√©ponse OpenAI invalide - pas de JSON')
    }

    const rawAnalysis = JSON.parse(jsonMatch[0])
    
    // Calculer le score total c√¥t√© serveur
    const partialScores = rawAnalysis.partialScores
    const calculatedScore = 
      partialScores.composition +
      partialScores.lighting +
      partialScores.focus +
      partialScores.exposure +
      partialScores.creativity +
      partialScores.emotion +
      partialScores.storytelling
    
    const analysis: PhotoAnalysis = {
      ...rawAnalysis,
      score: calculatedScore
    }
    
    return analysis

  } catch (error) {
    if (process.env.NODE_ENV === 'development') {
      console.error('Erreur analyse OpenAI:', error)
    }
    throw new Error('Impossible d\'analyser la photo')
  }
}